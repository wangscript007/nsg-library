/*
-------------------------------------------------------------------------------
This file is part of nsg-library.
http://github.com/woodjazz/nsg-library

Copyright (c) 2014-2016 NÃ©stor Silveira Gorski

-------------------------------------------------------------------------------
This software is provided 'as-is', without any express or implied
warranty. In no event will the authors be held liable for any damages
arising from the use of this software.

Permission is granted to anyone to use this software for any purpose,
including commercial applications, and to alter it and redistribute it
freely, subject to the following restrictions:

1. The origin of this software must not be misrepresented; you must not
claim that you wrote the original software. If you use this software
in a product, an acknowledgment in the product documentation would be
appreciated but is not required.
2. Altered source versions must be plainly marked as such, and must not be
misrepresented as being the original software.
3. This notice may not be removed or altered from any source distribution.
-------------------------------------------------------------------------------
*/

package com.nsg.${PROJECT_NAME};

import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

import android.app.*;
import android.content.*;
import android.view.*;
import android.view.inputmethod.BaseInputConnection;
import android.view.inputmethod.EditorInfo;
import android.view.inputmethod.InputConnection;
import android.view.inputmethod.InputMethodManager;
import android.widget.AbsoluteLayout;
import android.os.*;
import android.util.Log;
import android.graphics.*;
import android.media.*;
import android.hardware.*;

public class ${PROJECT_NAME}Activity extends NativeActivity 
{
    private static final String TAG = "nsg-library";
    protected boolean onLoadLibrary(ArrayList<String> libraryNames) 
    {
        //Log.v(TAG, "onLoadLibrary: ");
        for (final String name : libraryNames) 
        {
            System.loadLibrary(name);
        }
        return true;
    }
    
    @Override
    protected void onCreate(Bundle savedInstanceState) 
    {
        //Log.v("NSGActivity", "onCreate()");
        String libraryPath = getApplicationInfo().nativeLibraryDir;
        Log.v(TAG, "library path: " + libraryPath);
        File[] files = new File(libraryPath).listFiles();
        Arrays.sort(files, new Comparator<File>() 
        {
            @Override
            public int compare(File lhs, File rhs) 
            {
                return Long.valueOf(lhs.lastModified()).compareTo(rhs.lastModified());
            }
        });
        ArrayList<String> libraryNames = new ArrayList<String>(files.length);
        for (final File libraryFilename : files) 
        {
            String name = libraryFilename.getName().replaceAll("^lib(.*)\\.so$", "$1");
            Log.v(TAG, "library name: " + name);
            libraryNames.add(name);
        }
        onLoadLibrary(libraryNames);
        super.onCreate(savedInstanceState);
    }
}
