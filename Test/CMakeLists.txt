PROJECT(test)

file(GLOB src "*.cpp")

file(GLOB hdr "*.h")

set(data_dir ${CMAKE_CURRENT_SOURCE_DIR}/Data)
set(android_host_dir ${CMAKE_CURRENT_SOURCE_DIR}/AndroidHost)

if(NACL)
	add_executable(${PROJECT_NAME} ${src} ${hdr} )
	target_link_libraries(${PROJECT_NAME} nsg soil ppapi_cpp ppapi ppapi_gles2 pthread nacl_io)
	add_custom_command(
	 	TARGET ${PROJECT_NAME} POST_BUILD
	    	COMMAND ${CMAKE_COMMAND} -E copy_directory ${data_dir} ${CMAKE_CURRENT_BINARY_DIR}
			WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
elseif(ANDROID)
	add_library(${PROJECT_NAME} SHARED ${src} ${hdr})
	target_link_libraries(${PROJECT_NAME} nsg soil GLESv2 log android EGL)
	add_custom_command(
	 	TARGET ${PROJECT_NAME} POST_BUILD
	    	COMMAND ${CMAKE_COMMAND} -E copy_directory ${android_host_dir} ${CMAKE_CURRENT_BINARY_DIR}/AndroidHost
			WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
	add_custom_command(
	 	TARGET ${PROJECT_NAME} POST_BUILD
	    	COMMAND ${CMAKE_COMMAND} -E copy_directory ${data_dir} ${CMAKE_CURRENT_BINARY_DIR}/AndroidHost/assets
			WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})

	macro ( generate_local_properties_for_ant)
		set (LOCAL_PROPERTIES_FILE ${CMAKE_CURRENT_BINARY_DIR}/AndroidHost/local.properties)
		file(WRITE ${LOCAL_PROPERTIES_FILE} "# Autogenerated by cmake\n")
		file(WRITE ${LOCAL_PROPERTIES_FILE} "# Location of the SDK. This is only used by Ant\n")
		file(APPEND ${LOCAL_PROPERTIES_FILE} "sdk.dir=$ENV{ANDROID_SDK}\n")
	endmacro( generate_local_properties_for_ant)

	generate_local_properties_for_ant()

else()
	add_executable(${PROJECT_NAME} ${src} ${hdr} )
	target_link_libraries(${PROJECT_NAME} nsg glew soil glfw)
	add_custom_command(
	 	TARGET ${PROJECT_NAME} POST_BUILD
	    	COMMAND ${CMAKE_COMMAND} -E copy_directory ${data_dir} ${CMAKE_CURRENT_BINARY_DIR}
			WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
endif()

if(NACL)
	
	pnacl_finalise(test)

	add_custom_command(
		TARGET ${PROJECT_NAME} POST_BUILD
      	COMMAND python
      	ARGS $ENV{NACL_SDK_ROOT}/tools/httpd.py --no_dir_check -C ${CMAKE_CURRENT_BINARY_DIR}
    )
endif()
